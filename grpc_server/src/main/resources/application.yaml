server:
  port: 8080
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml

spring:
  application:
    name: grpc_demo
  # shardingjdbc 配置
  shardingsphere:
    datasource:
      names: write-shardingmaster,read-shardingslave0,read-shardingslave1
      write-shardingmaster:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/gva?allowPublicKeyRetrieval=true
        username: root
        password: 123456
      read-shardingslave0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3307/gva?allowPublicKeyRetrieval=true
        username: root
        password: 123456
      read-shardingslave1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3308/gva?allowPublicKeyRetrieval=true
        username: root
        password: 123456
    rules:
      sharding:
        key-generators:
          snowflake:
            props:
              worker-id: 123
            type: SNOWFLAKE
        sharding-algorithms:
          table-inline:
            type: INLINE
            props:
#              algorithm-expression: t_order$->{Math.abs(order_id.hashCode() % 2) + 1}
              algorithm-expression: t_order$->{Integer.parseInt(order_id[31], 16 ) % 2 + 1}
        tables:
          t_order:
            key-generate-strategy:
              column: order_id
              key-generator-name: snowflake
            actual-data-nodes: shardingmaster.t_order$->{1..2}
            table-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: table-inline
      readwrite-splitting:
        data-sources:
          shardingmaster:
            write-data-source-name: write-shardingmaster
            read-data-source-names: read-shardingslave0,read-shardingslave1
            load-balancer-name: sharding_ROUND
        load-balancers:
          sharding_ROUND:
            type: ROUND_ROBIN

    props:
      sql-show: true

  # 动态数据源配置
  datasource:
    druid: #德鲁伊配置
      stat-view-servlet:
        enabled: true
        loginUsername: admin
        loginPassword: 123456
    dynamic:
      primary: master #设置默认的数据源为【18】的【AgentErp】
      strict: false #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源.
      datasource:
        master:
          username: root
          password: 123456
          url: jdbc:mysql://localhost:3306/gva?allowPublicKeyRetrieval=true
          driver-class-name: com.mysql.cj.jdbc.Driver
          type: com.alibaba.druid.pool.DruidDataSource